<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:security="http://www.springframework.org/schema/security" 
	xsi:schemaLocation=
	"http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security 
	http://www.springframework.org/schema/security/spring-security.xsd">

	<!-- 패스워드 암호화 인코딩-->
	<bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

	<!-- 인터셉터, 권한, 로그인 기능 설정 -->
	<security:http auto-config="true" use-expressions="true">
	
		<!-- 인터셉터 경로 설정 --> 
		<!-- 해당 URL에 권한 가진 사람만 접근 가능하도록 설정 -->
		<!-- 로그인을 하지 않은 사용자도 접근 가능한 URI -->
		<security:intercept-url pattern="/" access="permitAll" />
		<!-- 정적 리소스는 모두 접근 허용 -->
		<security:intercept-url pattern="/resources/**" access="permitAll" />
		
		<!-- 로그인한 상태에서는 로그인이나 회원가입 화면에 접근 불가 -->
		<security:intercept-url pattern="/member/signin" access="isAnonymous()" />
		<security:intercept-url pattern="/member/signup" access="isAnonymous()" />
		
		
			<!-- 회원만 접근 가능 -->
			<security:intercept-url pattern="/member/memberInfo" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')"/>
			<security:intercept-url pattern="/community/write" access="hasRole('ROLE_USER','ROLE_ADMIN')"/>
			<!-- 관리자 권한 접근 가능 -->
			<security:intercept-url pattern="/notice/write" access="hasRole('ROLE_ADMIN')"/>
			<security:intercept-url pattern="/interview/write" access="hasRole('ROLE_ADMIN')"/>
	
		<!-- 폼 로그인 설정 -->
		<security:form-login login-page="/member/signin" 
								username-parameter="userid" 
								password-parameter="userpw" 
								default-target-url="/"
								authentication-failure-url="/member/signin"/>
								
								
		<!-- 로그아웃 -->
		<security:logout invalidate-session="true"
						logout-success-url="/member/signin"
						delete-cookies="JSESSIONID,SPRING_SECURITY_REMEMBER_ME_COOKIE"/>
						<!-- Logout 시 remember-me 인증용 쿠키 삭제 -->
		
		<!-- Remember-me 설정 / 데이터베이스 이용한 자동로그인-->
		<security:remember-me data-source-ref="dataSource" 
								
								remember-me-parameter="remember-me" 
								token-validity-seconds="604800"/> <!--일주일 -->
		
		<!-- 세션 관련 설정 --> 
		<security:session-management> 
			<!-- 동일 ID의 세션 최대수가 한 개, 그 이상일 경우는 기존 세션 무효화 -->
			<security:concurrency-control max-sessions="1" 
										expired-url="/login" 
										error-if-maximum-exceeded="true"/> 
		</security:session-management>

		<!-- 보안 관련 설정 --> 
		<security:csrf disabled="true"/>
		
		<!-- 권한이 없어서 금지된 URI 접속할 때 보여줄 페이지(403 에러 페이지 대체) -->
		<security:access-denied-handler error-page="/" />
	
	</security:http> 
	
	<!-- Persistent Remember Me Service -->
	<!-- <bean id="jdbcTokenRepositoryImpl"
		class="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl">
		<property name="dataSource" ref="dataSource" />
	</bean>
		 -->
	
		 
	<!-- 권한 관리 -->
	<security:authentication-manager> 

	<!-- 	<security:authentication-provider user-service-ref="userLoginService"> -->
		<security:authentication-provider>

			<!-- 인메모리 -->
<!-- 			<security:user-service>
				<security:user name="admin" password="{noop}1234" authorities="ROLE_ADMIN"/>
			</security:user-service>  -->
			
			
						
			<!-- id에 따른 비번 일치 여부 / 
			로그인에 성공한 사용자의 권한을 확인하여 접근 가능/불가 페이지를 구분하여 접근 가능하도록 설정 -->
			<!-- Bcrypt 암호화 : 사용자가 입력한 비밀번호를 암호화된 비밀번호와 체크하는 로직이 포함 -->  
			<security:jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select userid as username, userpw as password, enabled from member where userid=?"
				authorities-by-username-query="select userid as username, authority from authorities where userid=?"/>
			<security:password-encoder hash="bcrypt"/>

		
		</security:authentication-provider>
	</security:authentication-manager>

</beans>
